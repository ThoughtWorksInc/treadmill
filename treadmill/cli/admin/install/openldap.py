"""Installs and configures Treadmill locally.
"""

import logging
import os

import click

from treadmill import bootstrap
from treadmill import cli


_LOGGER = logging.getLogger(__name__)


def init():
    """Return top level command handler."""

    @click.command()
    @click.option('--gssapi', help='use gssapi auth.', is_flag=True,
                  default=False)
    @click.option('-p', '--rootpw',
                  help='password hash, generated by slappass -s <pwd>.')
    @click.option('-o', '--owner', help='root user.')
    @click.option('-s', '--suffix',
                  help='suffix (e.g dc=example,dc=com).',
                  required=True)
    @click.option('-u', '--uri', help='uri, e.g: ldap://...:20389',
                  required=True)
    @click.option('-m', '--masters', help='list of masters.',
                  type=cli.LIST)
    @click.option('--run/--no-run', is_flag=True, default=False)
    @click.pass_context
    def openldap(ctx, gssapi, rootpw, owner, suffix, uri,
                 masters, run):
        """Installs Treadmill Openldap server."""
        dst_dir = ctx.obj['PARAMS']['dir']

        run_script = None
        if run:
            run_script = os.path.join(dst_dir, 'bin', 'run.sh')

        if owner:
            ctx.obj['PARAMS']['owner'] = owner
        if uri:
            ctx.obj['PARAMS']['uri'] = uri
        if rootpw:
            ctx.obj['PARAMS']['rootpw'] = rootpw
        if gssapi:
            ctx.obj['PARAMS']['gssapi'] = gssapi
            ctx.obj['PARAMS']['rootpw'] = ''
        if masters:
            ctx.obj['PARAMS']['masters'] = masters
        else:
            ctx.obj['PARAMS']['masters'] = []
        if suffix:
            ctx.obj['PARAMS']['suffix'] = suffix

        bootstrap.install(
            'openldap',
            dst_dir,
            ctx.obj['PARAMS'],
            run=run_script
        )

    return openldap
